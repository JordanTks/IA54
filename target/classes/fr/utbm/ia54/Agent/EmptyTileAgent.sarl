/** 
 * 
 */
package fr.utbm.ia54.Agent

import io.sarl.core.Initialize
import io.sarl.core.Logging
import fr.utbm.ia54.Event.TokenReceived
import fr.utbm.ia54.Event.TileSet
import fr.utbm.ia54.Event.EndAgent
import io.sarl.core.DefaultContextInteractions
import java.util.UUID
import io.sarl.core.Lifecycle

/** 
 * @author Norgannon
 * 
 */
agent EmptyTileAgent {
	
	uses Logging, DefaultContextInteractions, Lifecycle

	var isHappy = false
	var numTile = 0
	var numFrameHost : int
	var uuidFrameHost : UUID
  
	on Initialize {
		loggingName = 'EmptyTileAgent'

		uuidFrameHost = occurrence.parameters.get(0) as UUID
		numFrameHost = occurrence.parameters.get(1) as Integer

		emit(new TileSet(null,this))

		// info("DEBUGG : Agent is set up.")
	}
	
	def setIsHappy(happy : boolean){
		this.isHappy = happy
	}
	
	def getNumTile : int{
		return this.numTile
	}
	
	def getNumFrameHost : int{
		return this.numFrameHost
	}
	
	def setNumFrameHost(num : int){
		this.numFrameHost = num
	}
	
	def getUuidFrameHost : UUID{
		return this.uuidFrameHost
	} 
	
	def setUuidFrameHost(uuid : UUID){
		this.uuidFrameHost = uuid
	}

	on TokenReceived {
		// tant que (voisin en état agression)
		//		échange ma place avec voisin en état agression
		
		// rend le token 
	}

	on EndAgent {
		killMe
	}
}
