/** 
 * 
 */
package fr.utbm.ia54.Agent

import io.sarl.core.AgentKilled
import io.sarl.core.AgentSpawned
import io.sarl.core.ContextJoined
import io.sarl.core.ContextLeft
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.MemberJoined
import io.sarl.core.MemberLeft
import io.sarl.core.Lifecycle
import fr.utbm.ia54.Event.GameSet
import fr.utbm.ia54.Event.FrameSatisfied
import io.sarl.core.DefaultContextInteractions
import java.util.ArrayList
import java.util.List
import java.util.Collections

/** 
 * @author Jordan
 * 
 */
agent BoardGameAgent {
	uses Logging, Lifecycle, DefaultContextInteractions
	
	val PROBLEM_SIZE = 3

	on Initialize {

		val startingPositions : List<Integer> = new ArrayList
	
		for (var i = 1; i < Math.pow(PROBLEM_SIZE, 2); i++)
			startingPositions.add(i)

		Collections.shuffle(startingPositions);

		info("Starting positions " + startingPositions);

		for (var i = 0; i < Math.pow(PROBLEM_SIZE, 2) - 1; i++)
			spawn(FrameAgent, #[startingPositions.get(i), i / PROBLEM_SIZE, i % PROBLEM_SIZE, PROBLEM_SIZE])
		
		// a voir
		emit(new GameSet)
		
		info("The agent was started.")
	}
	
	on FrameSatisfied {
		
		
	}

	on Destroy {
		// Event trigger when the agent is destroyed from the system.
		// You should put all the resource releasing statements in this block of code.
		info("The agent was stopped.")
	}

	on AgentSpawned {
		// A new agent has been spawned in our context.
	}

	on AgentKilled {
		// A new agent has been killed in our context.
	}

	on ContextJoined {
		// Event trigger when an agent of the level joins a shared context.
		// Sent to a agent of the same level.
	}

	on ContextLeft {
		// Event trigger when an agent of the level jleaves a shared context.
		// Sent to a agent of the same level.
	}

	on MemberJoined {
		// Event trigger when an agent joins one of our shared super-holons.
		// Sent to all members of the considered super-holon.
	}

	on MemberLeft {
		// Event trigger when an agent leaves one of our shared super-holons.
		// Sent to all members of the considered super-holon.
	}
}
